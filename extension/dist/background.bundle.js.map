{"version":3,"file":"background.bundle.js","sources":["../node_modules/gh-store-client/dist/index.mjs","../papers/types.ts","../papers/manager.ts","../config/session.js","../background.js"],"sourcesContent":["var d=class{constructor(e={}){this.cache=new Map,this.maxSize=e.maxSize??1e3,this.ttl=e.ttl??1e3*60*60,this.accessOrder=[]}get(e){let s=this.cache.get(e);if(s){if(Date.now()-s.lastAccessed>this.ttl){this.cache.delete(e),this.removeFromAccessOrder(e);return}return s.lastAccessed=Date.now(),this.updateAccessOrder(e),s.issueNumber}}set(e,s,t){if(this.cache.size>=this.maxSize&&!this.cache.has(e)){let r=this.accessOrder[this.accessOrder.length-1];r&&(this.cache.delete(r),this.removeFromAccessOrder(r))}this.cache.set(e,{issueNumber:s,lastAccessed:Date.now(),createdAt:t.createdAt,updatedAt:t.updatedAt}),this.updateAccessOrder(e)}remove(e){this.cache.delete(e),this.removeFromAccessOrder(e)}clear(){this.cache.clear(),this.accessOrder=[]}getStats(){return{size:this.cache.size,maxSize:this.maxSize,ttl:this.ttl}}shouldRefresh(e,s){let t=this.cache.get(e);return t?s>t.updatedAt:!0}updateAccessOrder(e){this.removeFromAccessOrder(e),this.accessOrder.unshift(e)}removeFromAccessOrder(e){let s=this.accessOrder.indexOf(e);s>-1&&this.accessOrder.splice(s,1)}};var l=\"0.3.2\";var f=class{constructor(e,s,t={}){this.token=e,this.repo=s,this.config={baseLabel:t.baseLabel??\"stored-object\",uidPrefix:t.uidPrefix??\"UID:\",reactions:{processed:t.reactions?.processed??\"+1\",initialState:t.reactions?.initialState??\"rocket\"}},this.cache=new d(t.cache)}async fetchFromGitHub(e,s={}){let t=new URL(`https://api.github.com/repos/${this.repo}${e}`);s.params&&(Object.entries(s.params).forEach(([i,a])=>{t.searchParams.append(i,a)}),delete s.params);let r=await fetch(t.toString(),{...s,headers:{Authorization:`token ${this.token}`,Accept:\"application/vnd.github.v3+json\",...s.headers}});if(!r.ok)throw new Error(`GitHub API error: ${r.status}`);return r.json()}createCommentPayload(e,s){let t={_data:e,_meta:{client_version:l,timestamp:new Date().toISOString(),update_mode:\"append\"}};return s&&(t.type=s),t}async getObject(e){let s=this.cache.get(e),t;if(s)try{t=await this.fetchFromGitHub(`/issues/${s}`),this._verifyIssueLabels(t,e)||(this.cache.remove(e),t=void 0)}catch{this.cache.remove(e)}if(!t){let c=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"closed\"}});if(!c||c.length===0)throw new Error(`No object found with ID: ${e}`);t=c[0]}if(!t?.body)throw new Error(`Invalid issue data received for ID: ${e}`);let r=JSON.parse(t.body),i=new Date(t.created_at),a=new Date(t.updated_at);return this.cache.set(e,t.number,{createdAt:i,updatedAt:a}),{meta:{objectId:e,label:`${this.config.uidPrefix}${e}`,createdAt:i,updatedAt:a,version:await this._getVersion(t.number)},data:r}}async createObject(e,s){let t=`${this.config.uidPrefix}${e}`,r=await this.fetchFromGitHub(\"/issues\",{method:\"POST\",body:JSON.stringify({title:`Stored Object: ${e}`,body:JSON.stringify(s,null,2),labels:[this.config.baseLabel,t]})});this.cache.set(e,r.number,{createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at)});let i=this.createCommentPayload(s,\"initial_state\"),a=await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})});return await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.processed})}),await this.fetchFromGitHub(`/issues/comments/${a.id}/reactions`,{method:\"POST\",body:JSON.stringify({content:this.config.reactions.initialState})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"closed\"})}),{meta:{objectId:e,label:t,createdAt:new Date(r.created_at),updatedAt:new Date(r.updated_at),version:1},data:s}}_verifyIssueLabels(e,s){let t=new Set([this.config.baseLabel,`${this.config.uidPrefix}${s}`]);return e.labels.some(r=>t.has(r.name))}async updateObject(e,s){let t=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!t||t.length===0)throw new Error(`No object found with ID: ${e}`);let r=t[0],i=this.createCommentPayload(s);return await this.fetchFromGitHub(`/issues/${r.number}/comments`,{method:\"POST\",body:JSON.stringify({body:JSON.stringify(i,null,2)})}),await this.fetchFromGitHub(`/issues/${r.number}`,{method:\"PATCH\",body:JSON.stringify({state:\"open\"})}),this.getObject(e)}async listAll(){let e=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\"}}),s={};for(let t of e)if(!t.labels.some(r=>r.name===\"archived\"))try{let r=this._getObjectIdFromLabels(t),i=JSON.parse(t.body),a={objectId:r,label:r,createdAt:new Date(t.created_at),updatedAt:new Date(t.updated_at),version:await this._getVersion(t.number)};s[r]={meta:a,data:i}}catch{continue}return s}async listUpdatedSince(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:this.config.baseLabel,state:\"closed\",since:e.toISOString()}}),t={};for(let r of s)if(!r.labels.some(i=>i.name===\"archived\"))try{let i=this._getObjectIdFromLabels(r),a=JSON.parse(r.body),n=new Date(r.updated_at);if(n>e){let c={objectId:i,label:i,createdAt:new Date(r.created_at),updatedAt:n,version:await this._getVersion(r.number)};t[i]={meta:c,data:a}}}catch{continue}return t}async getObjectHistory(e){let s=await this.fetchFromGitHub(\"/issues\",{method:\"GET\",params:{labels:[this.config.baseLabel,`${this.config.uidPrefix}${e}`].join(\",\"),state:\"all\"}});if(!s||s.length===0)throw new Error(`No object found with ID: ${e}`);let t=s[0],r=await this.fetchFromGitHub(`/issues/${t.number}/comments`),i=[];for(let a of r)try{let n=JSON.parse(a.body),c=\"update\",m,b={client_version:\"legacy\",timestamp:a.created_at,update_mode:\"append\"};typeof n==\"object\"?\"_data\"in n?(c=n.type||\"update\",m=n._data,b=n._meta||b):\"type\"in n&&n.type===\"initial_state\"?(c=\"initial_state\",m=n.data):m=n:m=n,i.push({timestamp:a.created_at,type:c,data:m,commentId:a.id})}catch{continue}return i}async _getVersion(e){return(await this.fetchFromGitHub(`/issues/${e}/comments`)).length+1}_getObjectIdFromLabels(e){for(let s of e.labels)if(s.name!==this.config.baseLabel&&s.name.startsWith(this.config.uidPrefix))return s.name.slice(this.config.uidPrefix.length);throw new Error(`No UID label found with prefix ${this.config.uidPrefix}`)}};var u={baseLabel:\"stored-object\",uidPrefix:\"UID:\",reactions:{processed:\"+1\",initialState:\"rocket\"},retries:{maxAttempts:3,backoffFactor:2},rateLimit:{maxRequestsPerHour:1e3}};function _(o){return{...u,...o,reactions:{...u.reactions,...o.reactions},retries:{...u.retries,...o.retries},rateLimit:{...u.rateLimit,...o.rateLimit}}}function v(o){return/^gh[ps]_[a-zA-Z0-9]{36}$/.test(o)}function P(o){return/^[\\w-]+\\/[\\w-]+$/.test(o)}var h=class extends Error{constructor(e){super(e),this.name=\"ConfigError\"}},g=class extends h{constructor(e=\"Invalid GitHub token format\"){super(e),this.name=\"TokenError\"}},p=class extends h{constructor(e=\"Invalid repository format. Use owner/repo\"){super(e),this.name=\"RepoError\"}};export{h as ConfigError,u as DEFAULT_CONFIG,f as GitHubStoreClient,p as RepoError,g as TokenError,_ as mergeConfig,P as validateRepo,v as validateToken};\n//# sourceMappingURL=index.mjs.map","// extension/papers/types.ts\nimport type { Json } from 'gh-store-client';\n\nexport type PaperMetadata = {\n  arxivId: string;\n  url: string;\n  title: string;\n  authors: string;\n  abstract: string;\n  timestamp: string;\n  published_date: string;\n  arxiv_tags: string[];\n  rating: string;\n}\n\nexport type ReadingSessionData = {\n  session_id: string;\n  duration_seconds: number;\n  idle_seconds: number;\n  start_time: string;\n  end_time: string;\n  total_elapsed_seconds: number;\n}\n\nexport type Interaction = {\n  type: string;\n  timestamp: string;\n  data: Json;\n}\n\nexport type InteractionLog = {\n  paper_id: string;\n  interactions: Interaction[];\n}\n\nexport const isReadingSession = (data: unknown): data is ReadingSessionData => {\n  const session = data as ReadingSessionData;\n  return (\n    typeof session === 'object' &&\n    session !== null &&\n    typeof session.session_id === 'string' &&\n    typeof session.duration_seconds === 'number' &&\n    typeof session.idle_seconds === 'number' &&\n    typeof session.start_time === 'string' &&\n    typeof session.end_time === 'string' &&\n    typeof session.total_elapsed_seconds === 'number'\n  );\n};\n\nexport const isInteractionLog = (data: unknown): data is InteractionLog => {\n  const log = data as InteractionLog;\n  return (\n    typeof log === 'object' &&\n    log !== null &&\n    typeof log.paper_id === 'string' &&\n    Array.isArray(log.interactions)\n  );\n};\n","// extension/papers/manager.ts\nimport { GitHubStoreClient } from 'gh-store-client';\nimport type { Json } from 'gh-store-client';\nimport { \n  type PaperMetadata, \n  type InteractionLog, \n  type Interaction,\n  type ReadingSessionData,\n  isReadingSession,\n  isInteractionLog\n} from './types';\n\nexport class PaperManager {\n  constructor(private client: GitHubStoreClient) {}\n\n  async getOrCreatePaper(paperData: Partial<PaperMetadata> & { arxivId: string }): Promise<PaperMetadata> {\n    const objectId = `paper:${paperData.arxivId}`;\n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as PaperMetadata;\n      return data;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        // Create new paper with default fields if it doesn't exist\n        const defaultPaperData: PaperMetadata = {\n          arxivId: paperData.arxivId,\n          url: paperData.url || `https://arxiv.org/abs/${paperData.arxivId}`,\n          title: paperData.title || paperData.arxivId,\n          authors: paperData.authors || '',\n          abstract: paperData.abstract || '',\n          timestamp: new Date().toISOString(),\n          rating: 'novote',\n          published_date: paperData.published_date || '',\n          arxiv_tags: paperData.arxiv_tags || []\n        };\n\n        await this.client.createObject(objectId, defaultPaperData);\n        return defaultPaperData;\n      }\n      throw error;\n    }\n  }\n\n  private async getOrCreateInteractionLog(arxivId: string): Promise<InteractionLog> {\n    const objectId = `interactions:${arxivId}`;\n    try {\n      const obj = await this.client.getObject(objectId);\n      const data = obj.data as unknown;\n      if (isInteractionLog(data)) {\n        return data;\n      }\n      throw new Error('Invalid interaction log format');\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        const newLog: InteractionLog = {\n          paper_id: arxivId,\n          interactions: []\n        };\n        await this.client.createObject(objectId, newLog);\n        return newLog;\n      }\n      throw error;\n    }\n  }\n\n  async logReadingSession(\n    arxivId: string,\n    session: ReadingSessionData,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaper({\n        arxivId,\n        ...paperData\n      });\n    }\n\n    // Log the session as an interaction\n    await this.addInteraction(arxivId, {\n      type: 'reading_session',\n      timestamp: new Date().toISOString(),\n      data: session\n    });\n  }\n\n  async logAnnotation(\n    arxivId: string,\n    key: string,\n    value: Json,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists\n    if (paperData) {\n      await this.getOrCreatePaper({\n        arxivId,\n        ...paperData\n      });\n    }\n\n    // Log the annotation as an interaction\n    await this.addInteraction(arxivId, {\n      type: 'annotation',\n      timestamp: new Date().toISOString(),\n      data: { key, value }\n    });\n  }\n\n  async updateRating(\n    arxivId: string,\n    rating: string,\n    paperData?: Partial<PaperMetadata>\n  ): Promise<void> {\n    // Ensure paper exists and get current data\n    const paper = await this.getOrCreatePaper({\n      arxivId,\n      ...paperData\n    });\n\n    // Update paper metadata with new rating\n    await this.client.updateObject(`paper:${arxivId}`, { \n      ...paper,\n      rating \n    });\n\n    // Log rating change as an interaction\n    await this.addInteraction(arxivId, {\n      type: 'rating',\n      timestamp: new Date().toISOString(),\n      data: { rating }\n    });\n  }\n\n  private async addInteraction(arxivId: string, interaction: Interaction): Promise<void> {\n    const log = await this.getOrCreateInteractionLog(arxivId);\n    log.interactions.push(interaction);\n    await this.client.updateObject(`interactions:${arxivId}`, log);\n  }\n\n  async getInteractions(\n    arxivId: string,\n    options: {\n      type?: string;\n      startTime?: Date;\n      endTime?: Date;\n    } = {}\n  ): Promise<Interaction[]> {\n    try {\n      const log = await this.getOrCreateInteractionLog(arxivId);\n      let interactions = log.interactions;\n\n      if (options.type) {\n        interactions = interactions.filter((i: Interaction) => i.type === options.type);\n      }\n\n      if (options.startTime || options.endTime) {\n        interactions = interactions.filter((i: Interaction) => {\n          const time = new Date(i.timestamp);\n          if (options.startTime && time < options.startTime) return false;\n          if (options.endTime && time > options.endTime) return false;\n          return true;\n        });\n      }\n\n      return interactions;\n    } catch (error) {\n      if (error instanceof Error && error.message.includes('No object found')) {\n        return [];\n      }\n      throw error;\n    }\n  }\n    \n  async getPaperReadingTime(arxivId: string): Promise<number> {\n      const interactions = await this.getInteractions(arxivId, { type: 'reading_session' });\n      return interactions.reduce((total, i) => {\n          // Log the interaction data for debugging\n          console.log('Calculating from interaction:', i);\n          \n          const data = i.data;\n          if (typeof data === 'object' && data !== null && 'duration_seconds' in data) {\n              return total + (data.duration_seconds as number);\n          }\n          return total;\n      }, 0);\n  }\n\n  async getPaperHistory(arxivId: string): Promise<Json[]> {\n    const objectId = `paper:${arxivId}`;\n    return this.client.getObjectHistory(objectId);\n  }\n}\n","// extension/config/session.js\n\n// Default configuration values\nconst DEFAULT_CONFIG = {\n    idleThresholdMinutes: 5,\n    minSessionDurationSeconds: 30,\n    // Adding more granular control\n    requireContinuousActivity: true,  // If true, resets timer on idle\n    logPartialSessions: false,        // If true, logs sessions even if under minimum duration\n    activityUpdateIntervalSeconds: 1  // How often to update active time\n};\n\n// Load session configuration from storage\nasync function loadSessionConfig() {\n    const items = await chrome.storage.sync.get('sessionConfig');\n    return { ...DEFAULT_CONFIG, ...items.sessionConfig };\n}\n\n// Save session configuration to storage\nasync function saveSessionConfig(config) {\n    await chrome.storage.sync.set({\n        sessionConfig: {\n            idleThresholdMinutes: Number(config.idleThresholdMinutes),\n            minSessionDurationSeconds: Number(config.minSessionDurationSeconds),\n            requireContinuousActivity: Boolean(config.requireContinuousActivity),\n            logPartialSessions: Boolean(config.logPartialSessions),\n            activityUpdateIntervalSeconds: Number(config.activityUpdateIntervalSeconds)\n        }\n    });\n}\n\n// Convert configuration to milliseconds for internal use\nfunction getConfigurationInMs(config) {\n    return {\n        idleThreshold: config.idleThresholdMinutes * 60 * 1000,\n        minSessionDuration: config.minSessionDurationSeconds * 1000,\n        activityUpdateInterval: config.activityUpdateIntervalSeconds * 1000,\n        requireContinuousActivity: config.requireContinuousActivity,\n        logPartialSessions: config.logPartialSessions\n    };\n}\n\nexport { loadSessionConfig, saveSessionConfig, getConfigurationInMs, DEFAULT_CONFIG };","// background.js\nimport { GitHubStoreClient } from 'gh-store-client';\nimport { PaperManager } from './papers/manager';\nimport { loadSessionConfig, getConfigurationInMs } from './config/session.js';\nimport { ReadingSessionData } from './papers/types';\n\nlet githubToken = '';\nlet githubRepo = '';\nlet currentPaperData = null;\nlet currentSession = null;\nlet activityInterval = null;\nlet sessionConfig = null;\nlet paperManager = null;\n\nclass ReadingSession {\n    constructor(arxivId, config) {\n       this.arxivId = arxivId;\n       this.sessionId = `session_${Date.now()}_${Math.random().toString(36).substring(2, 9)}`;\n       this.startTime = new Date();\n       this.activeTime = 0;\n       this.idleTime = 0;\n       this.lastActiveTime = new Date();\n       this.isTracking = true;\n       this.config = config;\n       this.endTime = null;\n       this.finalizedData = null;\n    }\n    \n    update() {\n       if (this.isTracking && !this.finalizedData) {\n           const now = new Date();\n           const timeSinceLastActive = now.getTime() - this.lastActiveTime.getTime();\n           \n           if (timeSinceLastActive < this.config.idleThreshold) {\n               this.activeTime += timeSinceLastActive;\n           } else {\n               this.idleTime += timeSinceLastActive;\n           }\n           \n           this.lastActiveTime = now;\n       }\n    }\n    \n    finalize() {\n       if (this.finalizedData) {\n           return this.finalizedData;\n       }\n    \n       this.update();\n       this.isTracking = false;\n       this.endTime = new Date();\n       const totalElapsed = this.endTime.getTime() - this.startTime.getTime();\n    \n       if (this.activeTime >= this.config.minSessionDuration) {\n           this.finalizedData = {\n               session_id: this.sessionId,\n               duration_seconds: Math.round(this.activeTime / 1000),\n               idle_seconds: Math.round(this.idleTime / 1000),\n               start_time: this.startTime.toISOString(),\n               end_time: this.endTime.toISOString(),\n               total_elapsed_seconds: Math.round(totalElapsed / 1000)\n           };\n           return this.finalizedData;\n       }\n       return null;\n    }\n    \n    end() {\n       return this.finalize();\n    }\n    \n    getMetadata() {\n       return {\n           sessionId: this.sessionId,\n           startTime: this.startTime.toISOString(),\n           activeSeconds: Math.round(this.activeTime / 1000),\n           idleSeconds: Math.round(this.idleTime / 1000)\n       };\n    }\n    }\n\n// Load credentials and configuration when extension starts\nasync function loadCredentials() {\n    const items = await chrome.storage.sync.get(['githubToken', 'githubRepo']);\n    githubToken = items.githubToken || '';\n    githubRepo = items.githubRepo || '';\n    console.log('Credentials loaded:', { hasToken: !!githubToken, hasRepo: !!githubRepo });\n    \n    // Initialize paper manager if we have credentials\n    if (githubToken && githubRepo) {\n        const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n        paperManager = new PaperManager(githubClient);\n        console.log('Paper manager initialized');\n    }\n    \n    // Load session configuration\n    sessionConfig = getConfigurationInMs(await loadSessionConfig());\n    console.log('Session configuration loaded:', sessionConfig);\n\n    // Initialize debug objects after everything is loaded\n    initializeDebugObjects();\n}\n\n// Listen for credential changes\nchrome.storage.onChanged.addListener(async (changes) => {\n    console.log('Storage changes detected:', Object.keys(changes));\n    if (changes.githubToken) {\n        githubToken = changes.githubToken.newValue;\n    }\n    if (changes.githubRepo) {\n        githubRepo = changes.githubRepo.newValue;\n    }\n    if (changes.sessionConfig) {\n        sessionConfig = getConfigurationInMs(changes.sessionConfig.newValue);\n        console.log('Session configuration updated:', sessionConfig);\n    }\n    \n    // Reinitialize paper manager if credentials changed\n    if (changes.githubToken || changes.githubRepo) {\n        if (githubToken && githubRepo) {\n            const githubClient = new GitHubStoreClient(githubToken, githubRepo);\n            paperManager = new PaperManager(githubClient);\n            console.log('Paper manager reinitialized');\n        }\n    }\n});\n\n// Initialize credentials\nloadCredentials();\n\n// Message passing between background and popup\nchrome.runtime.onMessage.addListener((request, sender, sendResponse) => {\n    console.log('Message received:', request);\n    \n    if (request.type === 'getCurrentPaper') {\n        console.log('Popup requested current paper:', currentPaperData);\n        sendResponse(currentPaperData);\n    }\n    else if (request.type === 'updateRating') {\n        console.log('Rating update requested:', request.rating);\n        handleUpdateRating(request.rating, sendResponse);\n        return true; // Will respond asynchronously\n    }\n    else if (request.type === 'updateAnnotation') {\n        console.log('Annotation update requested:', request.annotationType, request.data);\n        handleAnnotationUpdate(request.annotationType, request.data)\n            .then(response => sendResponse(response))\n            .catch(error => sendResponse({ success: false, error: error.message }));\n        return true; // Will respond asynchronously\n    }\n    return true;\n});\n\nasync function handleUpdateRating(rating, sendResponse) {\n    if (!paperManager) {\n        sendResponse({ success: false, error: 'Paper manager not initialized' });\n        return;\n    }\n\n    if (!currentPaperData) {\n        sendResponse({ success: false, error: 'No current paper' });\n        return;\n    }\n\n    try {\n        await paperManager.updateRating(currentPaperData.arxivId, rating, currentPaperData);\n        currentPaperData.rating = rating;\n        sendResponse({ success: true });\n    } catch (error) {\n        console.error('Error updating rating:', error);\n        sendResponse({ success: false, error: error.message });\n    }\n}\n\n// Tab and window management\nchrome.tabs.onActivated.addListener(async (activeInfo) => {\n    const tab = await chrome.tabs.get(activeInfo.tabId);\n    handleTabChange(tab);\n});\n\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n    if (changeInfo.status === 'complete') {\n        handleTabChange(tab);\n    }\n});\n\nchrome.windows.onFocusChanged.addListener((windowId) => {\n    if (windowId === chrome.windows.WINDOW_ID_NONE) {\n        endCurrentSession();\n    }\n});\n\n// Listen for URL changes\nchrome.webNavigation.onCompleted.addListener(async (details) => {\n    console.log('Navigation detected:', details.url);\n    if (details.url.includes('arxiv.org')) {\n        console.log('arXiv URL detected, processing...');\n        const paperData = await processArxivUrl(details.url);\n        if (paperData) {\n            console.log('Paper data extracted:', paperData);\n            await createGithubIssue(paperData);\n        } else {\n            console.log('Failed to extract paper data');\n        }\n    }\n}, {\n    url: [{\n        hostSuffix: 'arxiv.org'\n    }]\n});\n\nasync function handleTabChange(tab) {\n    const isArxiv = tab.url?.includes('arxiv.org/');\n    console.log('Tab change detected:', { isArxiv, url: tab.url });\n    \n    if (!isArxiv) {\n        console.log('Not an arXiv page, ending current session');\n        await endCurrentSession();\n        return;\n    }\n\n    if (currentSession) {\n        console.log('Ending existing session before starting new one');\n        await endCurrentSession();\n    }\n\n    console.log('Processing arXiv URL for new session');\n    currentPaperData = await processArxivUrl(tab.url);\n    if (currentPaperData) {\n        console.log('Starting new session for:', currentPaperData.arxivId);\n        currentSession = new ReadingSession(currentPaperData.arxivId, sessionConfig);\n        const metadata = currentSession.getMetadata();\n        console.log('New session created:', metadata);\n        startActivityTracking();\n    }\n}\n\nasync function endCurrentSession() {\n    if (currentSession && currentPaperData) {\n        console.log('Ending session for:', currentPaperData.arxivId);\n        const sessionData = currentSession.finalize();\n        if (sessionData) {\n            console.log('Creating reading event:', sessionData);\n            await createReadingEvent(currentPaperData, sessionData);\n        }\n        currentSession = null;\n        currentPaperData = null;\n        stopActivityTracking();\n    }\n}\n\nfunction startActivityTracking() {\n    if (!activityInterval) {\n        console.log('Starting activity tracking');\n        activityInterval = setInterval(() => {\n            if (currentSession) {\n                currentSession.update();\n            }\n        }, sessionConfig.activityUpdateInterval);\n    }\n}\n\nfunction stopActivityTracking() {\n    if (activityInterval) {\n        clearInterval(activityInterval);\n        activityInterval = null;\n    }\n}\n\nasync function createReadingEvent(paperData, sessionData) {\n    if (!paperManager || !paperData) {\n        console.error('Missing required data for creating reading event:', {\n            hasPaperManager: !!paperManager,\n            hasPaperData: !!paperData\n        });\n        return;\n    }\n\n    try {\n        await paperManager.logReadingSession(\n            paperData.arxivId,\n            sessionData,\n            paperData\n        );\n        console.log('Reading session logged:', {\n            arxivId: paperData.arxivId,\n            sessionId: sessionData.session_id,\n            activeTime: sessionData.duration_seconds,\n            idleTime: sessionData.idle_seconds,\n            totalTime: sessionData.total_elapsed_seconds\n        });\n        \n    } catch (error) {\n        console.error('Error logging reading session:', error);\n    }\n}\n\nasync function createGithubIssue(paperData) {\n    if (!paperManager) {\n        console.error('Paper manager not initialized');\n        return;\n    }\n\n    try {\n        const existingPaper = await paperManager.getOrCreatePaper(paperData);\n        console.log('Paper metadata stored/retrieved:', existingPaper.arxivId);\n        return existingPaper;\n    } catch (error) {\n        console.error('Error handling paper metadata:', error);\n    }\n}\n\nasync function handleAnnotationUpdate(type, data) {\n    if (!paperManager) {\n        throw new Error('Paper manager not initialized');\n    }\n\n    try {\n        const paperData = data.title ? {\n            title: data.title,\n        } : undefined;\n\n        if (type === 'vote') {\n            await paperManager.updateRating(\n                data.paperId,\n                data.vote,\n                paperData\n            );\n        } else {\n            await paperManager.logAnnotation(\n                data.paperId,\n                'notes',\n                data.notes,\n                paperData\n            );\n        }\n\n        return { success: true };\n    } catch (error) {\n        console.error('Error logging interaction:', error);\n        throw error;\n    }\n}\n\nasync function parseXMLText(xmlText) {\n    console.log('Parsing XML response...');\n    try {\n        const getTagContent = (tag, text) => {\n            const entryRegex = /<entry>([\\s\\S]*?)<\\/entry>/;\n            const entryMatch = text.match(entryRegex);\n            \n            if (entryMatch) {\n                const entryContent = entryMatch[1];\n                const regex = new RegExp(`<${tag}[^>]*>(.*?)</${tag}>`, 's');\n                const match = entryContent.match(regex);\n                return match ? match[1].trim() : '';\n            }\n            return '';\n        };\n        \n        const getAuthors = (text) => {\n            const authors = [];\n            const regex = /<author>[^]*?<name>([^]*?)<\\/name>[^]*?<\\/author>/g;\n            let match;\n            while (match = regex.exec(text)) {\n                authors.push(match[1].trim());\n            }\n            return authors;\n        };\n\n        const getCategories = (text) => {\n            const categories = new Set();\n            \n            const primaryMatch = text.match(/<arxiv:primary_category[^>]*term=\"([^\"]+)\"/);\n            if (primaryMatch) {\n                categories.add(primaryMatch[1]);\n            }\n            \n            const categoryRegex = /<category[^>]*term=\"([^\"]+)\"/g;\n            let match;\n            while (match = categoryRegex.exec(text)) {\n                categories.add(match[1]);\n            }\n            \n            return Array.from(categories);\n        };\n\n        const getPublishedDate = (text) => {\n            const match = text.match(/<published>([^<]+)<\\/published>/);\n            return match ? match[1].trim() : null;\n        };\n\n        const parsed = {\n            title: getTagContent('title', xmlText),\n            summary: getTagContent('summary', xmlText),\n            authors: getAuthors(xmlText),\n            published_date: getPublishedDate(xmlText),\n            arxiv_tags: getCategories(xmlText)\n        };\n        \n        console.log('Parsed XML:', parsed);\n        return parsed;\n    } catch (error) {\n        console.error('Error parsing XML:', error);\n        return null;\n    }\n}\n\nasync function processArxivUrl(url) {\n    console.log('Processing URL:', url);\n    \n    let arxivId = null;\n    const match = url.match(/arxiv\\.org\\/(abs|pdf|html)\\/([0-9.]+)/);\n    if (match) {\n        arxivId = match[2];\n    }\n    \n    if (!arxivId) {\n        console.log('No arXiv ID found in URL');\n        return null;\n    }\n    \n    console.log('Found arXiv ID:', arxivId);\n    \n    try {\n        const apiUrl = `https://export.arxiv.org/api/query?id_list=${arxivId}`;\n        console.log('Fetching from arXiv API:', apiUrl);\n        \n        const response = await fetch(apiUrl);\n        console.log('API response status:', response.status);\n        \n        if (!response.ok) {\n            throw new Error(`ArXiv API error: ${response.status}`);\n        }\n        \n        const text = await response.text();\n        const parsed = await parseXMLText(text);\n        \n        if (!parsed) {\n            console.log('Failed to parse API response');\n            return null;\n        }\n        \n        const paperData = {\n            arxivId,\n            url,\n            title: parsed.title,\n            authors: parsed.authors.join(\", \"),\n            abstract: parsed.summary,\n            timestamp: new Date().toISOString(),\n            rating: 'novote',\n            published_date: parsed.published_date,\n            arxiv_tags: parsed.arxiv_tags\n        };\n        \n        console.log('Paper data processed:', paperData);\n        return paperData;\n    } catch (error) {\n        console.error('Error processing arXiv URL:', error);\n        return null;\n    }\n}\n\n// Initialize debug objects in service worker scope\nfunction initializeDebugObjects() {\n    // @ts-ignore\n    globalThis.__DEBUG__ = {\n        get paperManager() { return paperManager; },\n        getGithubClient: () => paperManager?.client,\n        getCurrentPaper: () => currentPaperData,\n        getCurrentSession: () => currentSession,\n        getConfig: () => sessionConfig\n    };\n\n    console.log('Debug objects registered, access via __DEBUG__ in service worker console');\n}\n"],"names":["GitHubStoreClient"],"mappings":"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","x_google_ignoreList":[0]}